package main

import (
	"log"
	"os"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"
)

var sessions = make(map[int64]time.Time)

func main() {
	bot, err := tgbotapi.NewBotAPI(os.Getenv("BOT_TOKEN"))
	if err != nil {
		log.Panic(err)
	}

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	updates, _ := bot.GetUpdatesChan(u)

	for update := range updates {
		if update.Message != nil {
			handleMessage(bot, update.Message)
		}

		if update.CallbackQuery != nil {
			handleCallback(bot, update.CallbackQuery)
		}
	}
}

func handleMessage(bot *tgbotapi.BotAPI, msg *tgbotapi.Message) {
	// –ï—Å–ª–∏ –ø—Ä–∏—à–ª–æ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ /start, –ø–æ–∫–∞–∂–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É"
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üèãÔ∏è –ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É", "start_workout"),
		),
	)
	m := tgbotapi.NewMessage(msg.Chat.ID, "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É")
	m.ReplyMarkup = keyboard
	bot.Send(m)
}

func handleCallback(bot *tgbotapi.BotAPI, callback *tgbotapi.CallbackQuery) {
	// –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—á–∞–µ–º Telegram, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ –Ω–µ –ø–æ–¥–≤–∏—Å–∞–ª–∞
	bot.AnswerCallbackQuery(tgbotapi.NewCallback(callback.ID, ""))

	userID := int64(callback.From.ID)
	chatID := callback.Message.Chat.ID

	switch callback.Data {
	case "start_workout":
		sessions[userID] = time.Now()

		keyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("‚úÖ –ó–∞–∫–æ–Ω—á–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É", "stop_workout"),
			),
		)
		// –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π, –º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫—É
		edit := tgbotapi.NewEditMessageText(chatID, callback.Message.MessageID, "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å!")
		edit.ReplyMarkup = &keyboard
		bot.Send(edit)

	case "stop_workout":
		startTime, ok := sessions[userID]
		if !ok {
			bot.Send(tgbotapi.NewMessage(chatID, "–°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É."))
			return
		}

		duration := time.Since(startTime)
		delete(sessions, userID)

		text := "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: " + duration.Truncate(time.Second).String()

		// –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–ó–∞–∫–æ–Ω—á–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É"
		deleteMsg := tgbotapi.NewDeleteMessage(chatID, callback.Message.MessageID)
		bot.Send(deleteMsg)

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Ç–æ–≥–æ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ (–±–µ–∑ –∫–Ω–æ–ø–æ–∫)
		bot.Send(tgbotapi.NewMessage(chatID, text))

		// TODO: —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î
	}
}
